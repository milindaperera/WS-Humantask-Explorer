<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

	var log = new Log();
	log.debug("START : taskPoolModel");
	
	//initialize BPS HT service request creator
	var htRequest = require ('/js/WSHTRequest.js');
	htRequest.initHTServerInfo(BPSUrl, session.get('BPSSessionCookie'));
	
	var pagination = request.getParameter("pagination");
	if (pagination == null || pagination === ""){
		pagination = 1;
	}
	
	var pageSize = 10;
	var pageNumber = pagination - 1;
	var queryOrder = 'DESCENDING';
	var queryOrderBy = 'CREATED_DATE';
	var queryCategory = 'CLAIMABLE';

	try{
		var taskXMLList = null;
		var paginatePageCount = 0;
		var BPSResponseXML = new XML(htRequest.simpleQueryBasic("", pageSize, pageNumber, queryCategory, 
																					queryOrder, queryOrderBy));
		log.debug('simpleQueryBasic BPS RESPONSE : ' +BPSResponseXML);

		var soapenvNS = new Namespace('http://schemas.xmlsoap.org/soap/envelope/');
		var ns1NS = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803');
		var ns2NS = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803');
		var rowNS = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803');
		
		taskXMLList = BPSResponseXML..soapenvNS::Body.ns2NS::simpleQueryResponse.ns2NS::taskSimpleQueryResultSet.rowNS::row;
		paginatePageCount =  parseInt(BPSResponseXML..soapenvNS::Body.ns2NS::simpleQueryResponse.ns2NS::taskSimpleQueryResultSet.ns1NS::pages);
	}catch(e){
		log.error(e);
		//TODO Design proper ERROR page
		response.sendRedirect('login');
	}
	log.debug("END : taskPoolModel");
%>