<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

	include ("/model/common.jag");
	
	var log = new Log();

	var username = request.getParameter("username");
	var password = request.getParameter("password");

	if(username == "" || password == ""){
		authSuccess = false;
	} else{
		var authSuccess = HTTPAuthenticate(username, password, 'localhost');
	}
	if(!authSuccess){
		session.put("loginFailed" ,true);
		response.sendRedirect("login");
	} else {
		session.put('authSuccess', authSuccess);
		session.put('userName', username);
		
		//TODO REMOVE TEST SEGMENT test BEGIN
		//var tempCookie = session.get('BPSSessionCookie');
		//var cookie= {'name':'test','value':tempCookie};
		//response.addCookie(cookie)
		//response.addHeader('Set-Cookie', tempCookie + "; Path=/; Secure; HttpOnly");
		//response.addHeader('Set-Cookie', "requestedURI=../../attachment-mgt/download/ej4lv9jl2pc7o833f0c43j39po; Path=/");
		//test END
		response.sendRedirect("inbox");
	}
	
	
	function HTTPAuthenticate(username, password, remoteAddr){
		var log = new Log();
		log.info("start HTTP authentication function");

		var httpAuth = new XMLHttpRequest();

		//TODO : Retrieve endpoint from proper config file
		var endPoint = BPSUrl + '/services/AuthenticationAdmin.AuthenticationAdminHttpsSoap11Endpoint/';

		httpAuth.open('POST', endPoint, false);
		httpAuth.setRequestHeader('SOAPAction', 'urn:login');
		httpAuth.setRequestHeader('Content-Type','text/xml');

		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:aut="http://authentication.services.core.carbon.wso2.org">\
							<soapenv:Header/>\
								<soapenv:Body>\
									<aut:login>\
										<aut:username>' +username +'</aut:username>\
										<aut:password>' +password +'</aut:password>\
										<aut:remoteAddress>' +remoteAddr +'</aut:remoteAddress>\
									</aut:login>\
							</soapenv:Body>\
						</soapenv:Envelope>';

		try{
			httpAuth.send(payload);

			var BPSResponse = httpAuth.responseText;
			
			log.debug('Login RESPONSE:' +httpAuth.responseText.toString());

			var returnStart = BPSResponse.indexOf('<ns:return>') + '<ns:return>'.length;
			var returnEnd = BPSResponse.indexOf('</ns:return>');
			var isLoginSuccess = BPSResponse.substring(returnStart, returnEnd);

			log.debug('Login Success:' +isLoginSuccess);

			if(isLoginSuccess == 'true'){
				//retrieve session cookie with BPS and store in session
				var cookie = httpAuth.getResponseHeader('Set-Cookie').split(';')[0];
				
				log.debug('Session cookie : ' +cookie);
				log.debug('SessionID : ' +session.getId());

				session.put('BPSSessionCookie' , cookie);
				return true;
			}else{
				log.info('Login in to BPS Failed');
				return false;
			}
		}catch(e){
			 log.error(e.toString()); 
		}
	}
%>