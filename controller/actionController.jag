<%
	include ("/model/common.jag");
	include("/model/BPSWSRequest.jag");
	
	var log = new Log();
	
	//TODO remove logs
	log.info('-------------------requet received');
	log.info('session check:' +session.get('userName'));
	log.info(request.getQueryString());
	var taskId = request.getParameter('tid');
	var actionType = request.getParameter('type');
	
	log.info('task id : ' +taskId);
	log.info('task action : ' +actionType);
	
	if (actionType == 'claim_task') {
		var result = claimTask(taskId);
		var soapenvNS = new Namespace('http://schemas.xmlsoap.org/soap/envelope/');
		
		var occurence = result.toXMLString().indexOf('<ns2:claimResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>');
		
		if (occurence < 0){
			//claiming unsuccessfull
			var responseMsg = '<claim_taskResponse><success>false</success></claim_taskResponse>';
		}else{
			//claiming success
			var responseMsg = '<claim_taskResponse><success>true</success></claim_taskResponse>';
			//TODO decide whether to redirect to inboxTask instead of response
		}
		
		response.contentType = 'text/xml';
		response.content = responseMsg;
		
		/* RESPONSE ON FALIURE
		 <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
		   <soapenv:Body>
		      <soapenv:Fault>
		         <faultcode>soapenv:Server</faultcode>
		         <faultstring>The task[3507] already has an actual owner[[org.wso2.carbon.humantask.core.dao.jpa.openjpa.model.OrganizationalEntity@515152f5]]</faultstring>
		         <detail/>
		      </soapenv:Fault>
		   </soapenv:Body>
		</soapenv:Envelope> 
		
		RESPONSE ON SUCCESS
		<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
		   <soapenv:Body>
		      <ns2:claimResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>
		   </soapenv:Body>
		</soapenv:Envelope>
		 */
	}else if (actionType == 'start_task'){
		var result = startTask(taskId);
		log.info('start_task reply : ' +result);
		
		var occurence = result.toXMLString().indexOf('<ns2:startResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>');
		
		if(occurence < 0){
			//start unsuccessfull
			var responseMsg = '<start_taskResponse><success>false</success></start_taskResponse>';
			
		}else{
			//start successfull
			var responseMsg = '<start_taskResponse><success>true</success></start_taskResponse>';
			//TODO decide whether to redirect to inboxTask instead of response
		}
		
		response.contentType = 'text/xml';
		response.content = responseMsg;
		
		/*RESPONSE ON SUCCESS
		<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
		  <soapenv:Body>
		    <ns2:startResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>
		  </soapenv:Body>
		</soapenv:Envelope>
		
		RESPONSE ON FAILURE
		<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
		  <soapenv:Body>
		    <soapenv:Fault>
		      <faultcode>soapenv:Server</faultcode>
		      <faultstring>User[regionalClerkUser2] cannot perform [class org.wso2.carbon.humantask.core.engine.commands.Start] operation on task[3510] as the task is in state[IN_PROGRESS]. [class org.wso2.carbon.humantask.core.engine.commands.Start] operation can be performed only on tasks in [RESERVED] state</faultstring>
		      <detail/>
		    </soapenv:Fault>
		  </soapenv:Body>
		</soapenv:Envelope>
		*/
	}else if (actionType == 'stop_task'){
		var result = stopTask(taskId);
		log.info('stop_task reply : ' +result);
		
		var occurence = result.toXMLString().indexOf('<ns2:stopResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>');
		
		if(occurence < 0){
			//start unsuccessfull
			var responseMsg = '<stop_taskResponse><success>false</success></stop_taskResponse>';
			
		}else{
			//start successfull
			var responseMsg = '<stop_taskResponse><success>true</success></stop_taskResponse>';
			//TODO decide whether to redirect to inboxTask instead of response
		}
		
		response.contentType = 'text/xml';
		response.content = responseMsg;
		
		/*
		 * SUCCESS RESPONSE
		 <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
			   <soapenv:Body>
			      <ns2:stopResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>
			   </soapenv:Body>
			</soapenv:Envelope>
			
		   UNSUCCESS RESPONSE
		   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
			   <soapenv:Body>
			      <soapenv:Fault>
			         <faultcode>soapenv:Server</faultcode>
			         <faultstring>User[regionalClerkUser2] cannot [Stop] task[id:3512] as the task is in state[RESERVED]. [Stop] operation can be performed on tasks in state[IN_PROGRESS]!</faultstring>
			         <detail/>
			      </soapenv:Fault>
			   </soapenv:Body>
			</soapenv:Envelope>
			
			*/
	}else if (actionType == 'release_task'){
		
		var result = releaseTask(taskId);
		log.info('release_task reply : ' +result);
		
		var occurence = result.toXMLString().indexOf('<ns2:releaseResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>');
		
		if(occurence < 0){
			//start unsuccessfull
			var responseMsg = '<release_taskResponse><success>false</success></release_taskResponse>';
			
		}else{
			//start successfull
			var responseMsg = '<release_taskResponse><success>true</success></release_taskResponse>';
			//TODO decide whether to redirect to inboxTask instead of response
		}
		
		response.contentType = 'text/xml';
		response.content = responseMsg;
		
		/*
		 * SUCCESS RESPONSE
		<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
		   <soapenv:Body>
		      <ns2:releaseResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>
		   </soapenv:Body>
		</soapenv:Envelope>
			
		   UNSUCCESS RESPONSE
		   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
			   <soapenv:Body>
			      <soapenv:Fault>
			         <faultcode>soapenv:Server</faultcode>
			         <faultstring>Access Denied. You are not authorized to perform this task</faultstring>
			         <detail/>
			      </soapenv:Fault>
			   </soapenv:Body>
			</soapenv:Envelope>
			
			*/
		
	}else if (actionType == 'suspend_task'){
		var result = suspendTask(taskId);
				log.info('release_task reply : ' +result);
				
				var occurence = result.toXMLString().indexOf('<ns2:suspendResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>');
				
				if(occurence < 0){
					//start unsuccessfull
					var responseMsg = '<suspend_taskResponse><success>false</success></suspend_taskResponse>';
					
				}else{
					//start successfull
					var responseMsg = '<suspend_taskResponse><success>true</success></suspend_taskResponse>';
					//TODO decide whether to redirect to inboxTask instead of response
				}
				
				response.contentType = 'text/xml';
				response.content = responseMsg;
				
				/*
				 * SUCCESS RESPONSE
				<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
				   <soapenv:Body>
				      <ns2:suspendResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803"/>
				   </soapenv:Body>
				</soapenv:Envelope>
					
				   UNSUCCESS RESPONSE
				   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
					   <soapenv:Body>
					      <soapenv:Fault>
					         <faultcode>soapenv:Server</faultcode>
					         <faultstring>User[regionalClerkUser2] cannot perform [class org.wso2.carbon.humantask.core.engine.commands.Suspend] operation on task[3506] as the task is in state[SUSPENDED]. [class org.wso2.carbon.humantask.core.engine.commands.Suspend] operation can be performed only on tasks in states[RESERVED,READY,IN_PROGRESS]</faultstring>
					         <detail/>
					      </soapenv:Fault>
					   </soapenv:Body>
					</soapenv:Envelope>
					*/
	}
	
	
	
	
	
	function claimTask(id){
		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
						   <soapenv:Header/>\
						   <soapenv:Body>\
						      <ns:claim>\
						         <ns:identifier>' +id +'</ns:identifier>\
						      </ns:claim>\
						   </soapenv:Body>\
						</soapenv:Envelope>';
		
		var BPSSessionCookie = session.get('BPSSessionCookie');
		
		var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
		
		var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/claim';
		
		var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
		return result;
	}
	
	
	function startTask(id){
		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
							xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
						   <soapenv:Header/>\
						   <soapenv:Body>\
						      <ns:start>\
						         <ns:identifier>' +id +'</ns:identifier>\
						      </ns:start>\
						   </soapenv:Body>\
						</soapenv:Envelope>';
				
		var BPSSessionCookie = session.get('BPSSessionCookie');
		
		var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
		
		var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/start';
		
		var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
		
		return result;
	}

	
	function stopTask(id){
		
		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
									xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
						   <soapenv:Header/>\
						   <soapenv:Body>\
						      <ns:stop>\
						         <ns:identifier>' +id +'</ns:identifier>\
						      </ns:stop>\
						   </soapenv:Body>\
						</soapenv:Envelope>';
				
		var BPSSessionCookie = session.get('BPSSessionCookie');
		
		var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
		
		var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/stop';
		
		var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
		
		return result;
		
	}
	
	
	
	function releaseTask(id){
			
		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
										xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
						   <soapenv:Header/>\
						   <soapenv:Body>\
						      <ns:release>\
						         <ns:identifier>' +id +'</ns:identifier>\
						      </ns:release>\
						   </soapenv:Body>\
						</soapenv:Envelope>';
				
		var BPSSessionCookie = session.get('BPSSessionCookie');
		
		var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
		
		var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/release';
		
		var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
		
		return result;
		
	}
	
	
	function suspendTask(id){
		var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
											xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">
						   <soapenv:Header/>\
						   <soapenv:Body>\
						      <ns:suspend>\
						         <ns:identifier>' +id +'</ns:identifier>\
						      </ns:suspend>\
						   </soapenv:Body>\
						</soapenv:Envelope>';
				
		var BPSSessionCookie = session.get('BPSSessionCookie');
		
		var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
		
		var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/suspend';
		
		var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
		
		return result;
	}
%>